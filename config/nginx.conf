events {}

http {
    server {
        listen 80;

        server_name dsslocal.linkflow.co.th;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
    }
}


# # Define upstream for backend service
# upstream backend {
#     server localhost:8000;  # Your backend service (FastAPI, etc.)
# }

# # Define upstream for frontend service
# upstream frontend {
#     server localhost:3000;  # Your frontend service (React, Angular, etc.)
# }

# server {
#     listen 80;
#     server_name your_domain.com www.your_domain.com;

#     # Redirect all HTTP requests to HTTPS
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name your_domain.com www.your_domain.com;

#     # SSL configuration
#     ssl_certificate /etc/letsencrypt/live/your_domain.com/fullchain.pem;  # Adjust path as needed
#     ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem;  # Adjust path as needed
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'HIGH:!aNULL:!MD5';

#     # Frontend requests
#     location / {
#         proxy_pass http://frontend;  # Directing traffic to the frontend
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Backend API requests
#     location /api/ {
#         proxy_pass http://backend;  # Directing traffic to the backend API
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Optional: Logging
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;
# }
